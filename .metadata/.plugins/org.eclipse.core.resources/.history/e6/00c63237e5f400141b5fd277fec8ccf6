package Game;

import Tools.EShipType;
import Tools.IO;

public class Round {
	private Player[] player;
	InitGame init = new InitGame();

	public Round(Player[] player){
		this.player = player;
	}

	int x;
	int y;
	char orientation;
	String helfer;
	int gegner;
	int schiff;
	int counter = 1;
	while(ende() > 1){
		for(int i = 0; i < player.length; i++){

			if(player[i].getIsAlive()){
				player[i].reloadTimeCountdown();
				if(player[i].checkIfAnyShipIsReady()){

					//Bei allen Schiffen die laden, wird die reloadTime um einen verringert. Ist diese = 0 sind sie wieder verfügbar.

					System.out.println(player[i].getPlayerName() + " ist an der Reihe.");
					player[i].printPrivateField();

					//Gegenspieler wählen

					System.out.println("Gegen welchen Spieler möchten sie spielen?");
					for(int j = 0; j < player.length; j++){
						counter = j+1;
						if(j != i){
							if(player[j].getIsAlive()){
								System.out.println(player[j].getPlayerName() + "\t Spieler: " + counter);
								player[j].printPublicField();
							}else{
								System.out.println(player[j].getPlayerName() + "\t ist Tot");
							}
						}
					}
					System.out.println("Geben sie nun die Zahl ihres Wunschgegners ein.");
					gegner = IO.readInt();
					System.out.println("Sie spielen nun gegen "+ player[gegner-1].getPlayerName());

					//Schiff zum angreifen wählen

					System.out.println("Mit welchem Schiff möchten sie schießen?");
					if(player[i].getDestroyer().length > 0){
						System.out.println("Zerstörer\t 1");
					}
					if(player[i].getFrigate().length > 0){
						System.out.println("Frigatte\t 2");
					}
					if(player[i].getCorvette().length > 0){
						System.out.println("Korvette\t 3");
					}
					if(player[i].getSubmarine().length > 0){
						System.out.println("U-Boot\t\t 4");
					}
					schiff = IO.readInt();
					while(player[i].isAvailable(schiff) == false){
						System.out.println("Ihr/e Schiff lädt leider noch nach, bitte wählen sie ein anderes Schiff.");
						schiff = IO.readInt();
					}
					player[gegner-1].printPublicField();

					//Koordinaten wählen und schießen

					System.out.println("Geben sie nun die Koordinaten ein, auf die sie schießen möchten.");
					
					//TODO auf checkPos zugreifen
					
					String pos = IO.readString();
					int[] koordinaten = init.checkPos(pos);
					

					if(schiff == 1){
						System.out.println("Horizontal (h) oder Vertikal(v)?");
						orientation = IO.readChar();
						player[gegner-1].getPrivateField().setAttack(EShipType.DESTROYER, koordinaten,orientation, player[gegner-1]);
						player[i].setDestroyerIsntReady();
					} else if(schiff == 2){
						System.out.println("Horizontal (h) oder Vertikal(v)?");
						orientation = scan.next();
						player[gegner-1].getField().shoot(koordinaten[0],koordinaten[1],fri.getShootArea(),player[gegner-1].getOpenField(),orientation,player[gegner-1]);
						player[i].setFrigateIsntReady();
					} else if(schiff == 3){
						orientation = "h";
						player[gegner-1].getField().shoot(koordinaten[0],koordinaten[1],cor.getShootArea(),player[gegner-1].getOpenField(),orientation,player[gegner-1]);
						player[i].setCorvetteIsntReady();
					} else if(schiff == 4){
						orientation = "h";
						player[gegner-1].getField().shoot(koordinaten[0],koordinaten[1],sub.getShootArea(),player[gegner-1].getOpenField(),orientation,player[gegner-1]);
						player[i].setSubmarineIsntReady();
					}

					//Überprüft, ob der Gegner noch am Leben ist, wenn nicht wird isAlive auf false gesetzt.
					if(player[gegner-1].getField().isDead() == true){
						player[gegner-1].setAlive(false);
						System.out.println("Herzlichen Glückwunsch, sie haben " + player[gegner-1].getPlayerName() + " besiegt.");
					}

					//überprüft, ob noch Spieler am leben sind. Wenn nicht wird Spiel beendet.
					if(ende() == 1){
						System.out.println("Herzlichen Glückwunsch, Spieler " + player[i].getPlayerName() + " hat gewonnen.");
						System.exit(-1);
					}


					System.out.println("Drücken sie (n) damit der nächste Spieler an der Reihe ist.");
					helfer = scan.next();
					while(!(helfer.equals("n"))){
						System.out.println("Ihre Eingabe war nicht korrekt. Bitte wiederholen sie diese. Oder geben sie (end) ein um das Spiel zu beenden.");
						helfer = scan.next();
						if(helfer.equals("end")){
							System.exit(-1);
						}
					}
					for(int w = 0; w < 150; w++){
						System.out.println("");
					}
				}
			}
		}

	}



	public int ende(){
		int counter = 0;
		for(int i = 0; i<player.length; i++){
			if(player[i].getIsAlive()){
				counter++;
			}
		}
		return counter;
	}
	
	

}
